local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local network = replicatedStorage:WaitForChild("Network")

local purchaseEvent = network:WaitForChild("Merchant_RequestPurchase")
local teleportEvent = network:WaitForChild("Teleports_RequestInstanceTeleport")
local autoMineEvent = network:WaitForChild("AutoMine_Enable")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 150)
frame.Position = UDim2.new(0.5, -125, 0.5, -75)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, 0, 0.3, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggleButton.Text = "Auto Merchant: OFF"
toggleButton.Parent = frame

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0.3, 0)
statusLabel.Position = UDim2.new(0, 0, 0.3, 0)
statusLabel.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Text = "Status: Inactive"
statusLabel.Parent = frame

local slider = Instance.new("TextButton")
slider.Size = UDim2.new(1, 0, 0.2, 0)
slider.Position = UDim2.new(0, 0, 0.6, 0)
slider.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
slider.TextColor3 = Color3.fromRGB(255, 255, 255)
slider.Text = "Duration: 3m 0s"
slider.Parent = frame

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(0, 0, 1, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
sliderBar.ZIndex = 0.5
sliderBar.Parent = slider

local timeRemainingLabel = Instance.new("TextLabel")
timeRemainingLabel.Size = UDim2.new(1, 0, 0.2, 0)
timeRemainingLabel.Position = UDim2.new(0, 0, 0.8, 0)
timeRemainingLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
timeRemainingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timeRemainingLabel.Text = "Time Remaining: 0s"
timeRemainingLabel.Parent = frame

local isAutoMerchantEnabled = false
local sessionDuration = 180 -- Default to 3 minutes (in seconds)
local currentThread

local function updateSliderBar()
    local percent = (sessionDuration - 180) / 420
    sliderBar.Size = UDim2.new(percent, 0, 1, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(255 * (1 - percent), 255 * percent, 0)
end

slider.MouseButton1Down:Connect(function()
    if isAutoMerchantEnabled then return end
    
    local mouse = player:GetMouse()
    local sliderStart = slider.AbsolutePosition.X
    local sliderEnd = sliderStart + slider.AbsoluteSize.X
    
    local function update()
        local percent = math.clamp((mouse.X - sliderStart) / slider.AbsoluteSize.X, 0, 1)
        sessionDuration = 180 + percent * 420
        local minutes = math.floor(sessionDuration / 60)
        local seconds = sessionDuration % 60
        slider.Text = string.format("Duration: %dm %ds", minutes, seconds)
        updateSliderBar()
    end
    
    update()
    local moveConnection = mouse.Move:Connect(update)
    local releaseConnection
    releaseConnection = mouse.Button1Up:Connect(function()
        moveConnection:Disconnect()
        releaseConnection:Disconnect()
    end)
end)

toggleButton.MouseButton1Click:Connect(function()
    if isAutoMerchantEnabled then
        isAutoMerchantEnabled = false
        toggleButton.Text = "Auto Merchant: OFF"
        statusLabel.Text = "Status: Inactive"
        slider.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
        
        if currentThread then
            task.cancel(currentThread)
        end
        return
    end
    
    isAutoMerchantEnabled = true
    toggleButton.Text = "Auto Merchant: ON"
    statusLabel.Text = "Status: Running"
    slider.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
    
    currentThread = task.spawn(function()
        while isAutoMerchantEnabled do
            -- First teleport location
            if player and player.Character then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.CFrame = CFrame.new(20713.64, 17.65, -19869.01)
                end
            end
            
            autoMineEvent:FireServer(false)
            
            for i = 1, 6 do
                for _ = 1, 3 do
                    purchaseEvent:InvokeServer("MiningMerchant", i)
                    wait(0.0001)
                end
            end
            
            -- Second teleport location
            if player and player.Character then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.CFrame = CFrame.new(20614.04, 7.76, -19829.09)
                end
            end
            
            -- No teleport to world 7, just enable auto mining
            autoMineEvent:FireServer(true)
            local startTime = tick()
            
            while isAutoMerchantEnabled and tick() - startTime < sessionDuration do
                local remainingTime = math.max(0, sessionDuration - (tick() - startTime))
                local minutes = math.floor(remainingTime / 60)
                local seconds = remainingTime % 60
                timeRemainingLabel.Text = string.format("Time Remaining: %dm %ds", minutes, seconds)
                wait(1)
            end
        end
        
        isAutoMerchantEnabled = false
        toggleButton.Text = "Auto Merchant: OFF"
        statusLabel.Text = "Status: Inactive"
        slider.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
    end)
end)
